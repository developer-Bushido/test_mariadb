---
- name: Update apt cache
  apt:
    update_cache: yes
  become: true
  tags: install

- name: Ensure python3-pip is installed
  apt:
    name: python3-pip
    state: present
  become: true
  tags: install

- name: Ensure necessary Python MySQL library is installed
  pip:
    name: PyMySQL
    state: present
  become: true
  tags: install

- name: Install UFW
  apt:
    name: ufw
    state: present
  tags: install

- name: Enable UFW
  ufw:
    state: enabled
    policy: deny
    direction: incoming
  tags: install

- name: Allow TCP traffic
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
    - 22
    - 6032
    - 6033
    - 8300
    - 8301
    - 8302
    - 8303
    - 8500
    - 8600
  tags: ports

- name: Allow UDP traffic
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: udp
  with_items:
    - 8301
    - 8302
  tags: ports

- name: Install prerequisite packages
  apt:
    name:
      - lsb-release
      - wget
      - apt-transport-https
      - ca-certificates
      - gnupg
      - mysql-client
    state: present
  become: true
  tags: proxysql_install

- name: Add ProxySQL repository key
  shell: wget -O - 'https://repo.proxysql.com/ProxySQL/proxysql-2.5.x/repo_pub_key' | apt-key add -
  become: true
  tags: proxysql_install

- name: Add ProxySQL repository
  shell: echo deb https://repo.proxysql.com/ProxySQL/proxysql-2.5.x/$(lsb_release -sc)/ ./ | tee /etc/apt/sources.list.d/proxysql.list
  become: true
  tags: proxysql_install

- name: Install ProxySQL
  apt:
    name: proxysql
    state: latest
    update_cache: yes
  become: true
  tags: proxysql_install

- name: Get the master host IP
  set_fact:
    master_host_ip: "{{ groups['mariadb'][0] }}"
  tags:
    - proxysql_configure

- name: Configure ProxySQL
  template:
    src: proxysql.cnf.j2
    dest: /etc/proxysql.cnf
  become: true
  notify: restart proxysql
  tags: proxysql_configure

- name: Enable and start ProxySQL service
  systemd:
    name: proxysql
    state: started
    enabled: true
  become: true
  tags: proxysql_configure

- name: Add monitor users
  community.proxysql.proxysql_mysql_users:
    login_user: "admin"
    login_password: "{{ proxysql_users.admin.password }}"
    username: "monitor"
    password: "monitor"
    state: present
    default_hostgroup: 1
    load_to_runtime: true
  tags:
    - proxysql_configure

- name: Get the master host IP
  set_fact:
    master_host_ip: "{{ groups['mariadb'][0] }}"
  tags:
    - proxysql_configure

- name: Add master server
  community.proxysql.proxysql_backend_servers:
    login_user: "admin"
    login_password: "{{ proxysql_users.admin.password }}"
    hostname: "{{ item }}"
    hostgroup_id: 1
    state: present
    load_to_runtime: false
  loop: "{{ groups['mariadb'] }}"
  when: item == master_host_ip
  tags:
    - proxysql_configure

- name: Add slave servers
  community.proxysql.proxysql_backend_servers:
    login_user: "admin"
    login_password: "{{ proxysql_users.admin.password }}"
    hostname: "{{ item }}"
    hostgroup_id: 2
    max_replication_lag: 10
    state: present
    load_to_runtime: false
  loop: "{{ groups['mariadb'] }}"
  when: item != master_host_ip
  tags:
    - proxysql_configure

- name: Add a replication hostgroup
  community.proxysql.proxysql_replication_hostgroups:
    login_user: "admin"
    login_password: "{{ proxysql_users.admin.password }}"
    writer_hostgroup: 1
    reader_hostgroup: 2
    state: present
    load_to_runtime: false
  tags:
    - proxysql_configure

- name: Add READ rule
  community.proxysql.proxysql_query_rules:
    login_user: admin
    login_password: "{{ proxysql_users.admin.password }}"
    match_pattern: "^SELECT.*"
    destination_hostgroup: 2
    active: 1
    retries: 3
    state: present
    apply: true
    load_to_runtime: true
  tags:
    - proxysql_configure

- name: Add WRITE rule
  community.proxysql.proxysql_query_rules:
    login_user: admin
    login_password: "{{ proxysql_users.admin.password }}"
    match_pattern: "^SELECT.*FOR UPDATE$"
    destination_hostgroup: 1
    active: 1
    retries: 3
    state: present
    apply: true
    load_to_runtime: true
  tags:
    - proxysql_configure

- name: Add special users
  community.proxysql.proxysql_mysql_users:
    login_user: "admin"
    login_password: "{{ proxysql_users.admin.password }}"
    username: "{{ item.key }}"
    password: "{{ item.value.password }}"
    state: present
    default_hostgroup: 1
    load_to_runtime: true
  loop: "{{ mariadb.special_users | dict2items }}"
  tags:
    - proxysql_configure
    - sync_users

- name: Add regular users
  community.proxysql.proxysql_mysql_users:
    login_user: "admin"
    login_password: "{{ proxysql_users.admin.password }}"
    username: "{{ item.key }}"
    password: "{{ item.value.password }}"
    state: present
    load_to_runtime: true
    default_hostgroup: 2
  loop: "{{ mariadb.users | dict2items }}"
  tags:
    - proxysql_configure
    - sync_users

- name: Remove users
  community.proxysql.proxysql_mysql_users:
    login_user: "admin"
    login_password: "{{ proxysql_users.admin.password }}"
    config_file: "~/proxysql.cnf"
    username: "{{ item }}"
    state: absent
  loop: "{{ mariadb.absent_users }}"
  tags:
    - proxysql_configure
    - sync_users
